# Generated from lib/ruboty/ai_agent/chat_thread_messages.rb with RBS::Inline

module Ruboty
  module AiAgent
    # Manage messages for the chat thread.
    class ChatThreadMessages < ChatThreadAssociations[ChatMessage]
      # @rbs message: ChatMessage
      def add: (ChatMessage message) -> void

      def token_usage: () -> TokenUsage?

      alias << add

      # Check if any message's token usage exceeds auto compact threshold
      def over_auto_compact_threshold?: () -> boolish

      # Compact chat messages by summarizing them
      # @rbs llm: LLM::OpenAI
      # @rbs return: void
      def compact: (llm: LLM::OpenAI) -> void

      # Generate summary of chat messages
      # @rbs llm: LLM::OpenAI
      # @rbs return: String
      def summarize: (llm: LLM::OpenAI) -> String
    end
  end
end
