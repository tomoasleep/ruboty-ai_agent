# Generated from lib/ruboty/ai_agent/auto_compact_service.rb with RBS::Inline

module Ruboty
  module AiAgent
    # Service to automatically compact chat history when token usage exceeds threshold
    class AutoCompactService
      attr_reader chat_thread: ChatThread

      # @rbs chat_thread: ChatThread
      def initialize: (chat_thread: ChatThread) -> untyped

      # @rbs token_usage: TokenUsage
      # @rbs assistant_message: ChatMessage
      # @rbs return: bool
      def check_and_compact: (token_usage: TokenUsage, assistant_message: ChatMessage) -> bool

      private

      # @rbs assistant_message: ChatMessage
      # @rbs return: void
      def perform_compact: (assistant_message: ChatMessage) -> void

      # @rbs assistant_message: ChatMessage
      # @rbs return: bool
      def tool_call?: (ChatMessage assistant_message) -> bool

      # @rbs messages: Array[ChatMessage]
      # @rbs return: String
      def generate_summary: (Array[ChatMessage] messages) -> String

      # @rbs messages: Array[ChatMessage]
      # @rbs return: String
      def format_messages_for_summary: (Array[ChatMessage] messages) -> String
    end
  end
end
